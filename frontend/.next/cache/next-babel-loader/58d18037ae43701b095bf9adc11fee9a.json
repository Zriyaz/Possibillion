{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\test\\\\Possibilities\\\\frontend\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport { getSeoData } from \"./utils\";\n\nvar Index = function Index(seoData) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NextJS with Dynamic SEO Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\n\nIndex.getInitialProps = function () {\n  return fetch('/', {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/test/Possibilities/frontend/pages/index.js"],"names":["Head","getSeoData","Index","seoData","getInitialProps","fetch","method","then","response","json","err","console","log"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,UAAR,QAAyB,SAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAY;AAEtB,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAPD;;KAAMD,K;;AASNA,KAAK,CAACE,eAAN,GAAwB,YAAK;AACzB,SAAOC,KAAK,CAAC,GAAD,EAAM;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAN,CAAL,CACNC,IADM,CACD,UAAAC,QAAQ,EAAE;AACZ,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAHM,WAIA,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAJH,CAAP;AAKH,CAND;;AAQA,eAAeR,KAAf","sourcesContent":["import Head from \"next/head\"\r\nimport {getSeoData} from \"./utils\"\r\n\r\nconst Index = (seoData) =>{\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1>NextJS with Dynamic SEO Page</h1>\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nIndex.getInitialProps = () =>{\r\n    return fetch('/', {method: 'GET'})\r\n    .then(response=>{\r\n        return response.json()\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}